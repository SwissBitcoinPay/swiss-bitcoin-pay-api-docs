openapi: 3.0.3
info:
  title: Swiss Bitcoin Pay Merchant's API
  description: "API for merchants to connect to their Swiss Bitcoin Pay's wallet account.<br/>For creating an invoice, you need to provide the `api-key` header with your API Key, available in your dashboard (not required for reading invoice)."
  termsOfService: http://swagger.io/terms/
  contact:
    email: hello@swiss-bitcoin-pay.ch
  version: 1.2.1
servers:
  - url: https://api.swiss-bitcoin-pay.ch
tags:
  - name: checkout
    description: Everything about creating and checking invoices
  - name: atm
    description: "Everything about the ATM service<br /><br />You need to provide 2 keys in the header:<br/>1. `api-key`: Your API key available in your dashboard<br/>2. `sbp-sig`: An HMAC SHA-256 signature of your payload, with the encryption key in your dashboard as `sha256=${signature}`"
paths:
  /checkout:
    post:
      tags:
        - checkout
      summary: Create an invoice
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CheckoutRequest"
      security:
        - ApiKeyAuth: []
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CheckoutResponse"
        "403":
          description: Api key not provided
        "500":
          description: Invalid API key or unknown error
  /checkout/{id}:
    get:
      tags:
        - checkout
      summary: Check invoice status
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Hash ID of invoice
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CheckoutStatus"
        "500":
          description: Unknown error
  /atm-withdraw:
    post:
      tags:
        - atm
      summary: Create LNURLw QR code
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AtmWithdrawRequest"
      security:
        - ApiKeyAuth: []
        - SbpSigAuth: []
      responses:
        "201":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AtmWidthawResponse"
        "403":
          description: Api key or Signature not provided
        "500":
          description: Invalid API key or unknown error
components:
  schemas:
    CheckoutRequest:
      required:
        - title
        - amount
      type: object
      properties:
        title:
          type: string
          description: "What will appear on the client's wallet"
        description:
          type: string
        amount:
          type: number
          description: "How much to charge, with decimals. ex: `21.50`"
        unit:
          default: "Your account's default currency"
          type: string
          description: "Optionally select a reference currency you want use. All major currencies are supported, along with `sat` and `BTC`"
        onChain:
          default: false
          type: boolean
          description: "If Onchain payment is available"
        delay:
          default: 10
          type: number
          description: "How long (in minutes) the client have to pay the invoice before it gets expired"
        email:
          type: string
          description: "An message containing the created invoice will be sent to this email"
        emailLanguage:
          type: string
          description: "In which language the email should be sent. Currently only supports `en` and `fr`"
        redirect:
          type: boolean
          description: "If the server should directly return a 302 REDIRECT request to force the user's browser to go to the invoice payment page"
        redirectAfterPaid:
          type: string
          description: "Where the user will be redirected after paid (confirmation page).<br/>(Lightning: instant, Onchain: after 1 confirmation)"
        webhook:
          type: object
          description: "Our backend will call your webhook with a POST request will all the invoice details once it has been paid (Lightning: instant, Onchain: after 1 confirmation), unconfirmed (in case of an Onchain payment just discovered), or expired.<br/>You need to manually check on your side the `status` value (will be either `paid`, `unconfirmed`, or `expired`).<br/>The webhook configuration is never visible to the user"
          required:
            - url
          properties:
            url:
              type: string
              description: Your URL to be called with a POST request with all the invoice details
            headers:
              type: object
              description: An optional object that our backend will include as headers when making the POST request
            body:
              type: object
              description: "Optional object that our backend will include in the POST request alongside the invoice data. Can be anything: string, number, array, object, etc., including `null`"
        extra:
          type: object
          description: "Any extra parameters that will be returned to you when your webhook is called"
          properties:
            customNote:
              type: string
              description: An optional note that will be visible in your Dashboard's activities list
            customDevice:
              type: string
              description: An optional device name to keep track in your dashboard from which device/software the invoice code was generated. ex. `Phone A`
            AnyValue:
              description: "Can be anything: string, number, array, object, etc., including `null`"
    CheckoutResponse:
      required:
        - id
        - pr
        - checkoutUrl
      type: object
      properties:
        id:
          type: string
        pr:
          type: string
        checkoutUrl:
          type: string
        onChainAddr:
          type: string
    CheckoutStatus:
      required:
        - createdAt
        - delay
        - pr
        - amount
        - btcAmount
        - unit
        - isPaid
        - isInit
        - isExpired
        - title
        - hash
        - fiatAmount
        - fiatUnit
      type: object
      properties:
        createdAt:
          type: number
        delay:
          type: number
        pr:
          type: string
        amount:
          type: number
        btcAmount:
          type: string
        unit:
          type: string
        isPaid:
          type: boolean
        isInit:
          type: boolean
        isExpired:
          type: boolean
        paymentMethod:
          type: string
          enum:
            - lightning
            - onchain
        paidAt:
          type: number
        title:
          type: string
        description:
          type: string
        hash:
          type: string
        fiatAmount:
          type: number
        fiatUnit:
          type: string
        onChainAddr:
          type: string
        minConfirmations:
          type: number
        confirmations:
          type: number
        txid:
          type: string
        idPending:
          type: boolean
        redirectAfterPaid:
          type: string
    Payment:
      type: object
      properties:
        checking_id:
          type: string
        pending:
          type: boolean
        amount:
          type: number
        fee:
          type: number
        memo:
          type: string
        time:
          type: number
        bolt11:
          type: string
        preimage:
          type: string
        payment_hash:
          type: string
        extra:
          type: object
        wallet_id:
          type: string
        webhook:
          type: string
        webhook_status:
          type: string
    AtmWithdrawRequest:
      required:
        - amount
      type: object
      properties:
        amount:
          type: number
          description: "How much to withdraw. ex: `21`"
        unit:
          default: "Your account's default currency"
          type: string
          description: "In which currency is the `amount` denominated. ex: `EUR`. All major currencies are supported, along with `sat` and `BTC`"
        title:
          type: string
          description: Set a specific title that your client will see & keep when scanning your LNURLw QR code
        uses:
          default: 1
          type: number
          description: How many times the LNURLw QR code can be used to withdraw sats
        wait_time:
          default: 1
          type: number
          description: How long to wait in seconds between each withdraw
        deviceName:
          type: string
          description: An optional device name to keep track in your dashboard from which device/software the LNURLw QR code was generated. ex. `ATM A`
        customNote:
          type: string
          description: An optional note that will be visible in your Dashboard's activities list
        language:
          type: string
          description: In which language the default `title` should be expressed. Currently only supports `en` and `fr`. No effect if you defined `title`
        webhook_url:
          type: string
          description: Webhook called when the QR code is withdrawn
        webhook_body:
          type: string
          description: Attached body to the webhook
        webhook_headers:
          type: string
          description: Attached headers to the webhook
    AtmWidthawResponse:
      required:
        - lnurl
        - amount
      type: object
      properties:
        lnurl:
          type: string
          description: The LNURLw to be displayed as a QR code
        amount:
          type: string
          description: Amount in sats
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: "api-key"
    SbpSigAuth:
      type: sbpSig
      in: header
      name: "sbp-sig"
